[0;92m[0;32m

┌──────────────────────────────────────────────────────────────────────────────────────────────────┐
│ Phylogenetic Graph (PhyG) Version 1.2 [063862d] (3037 commits) on 2025-01-02 @ 20:15:21 UTC      │
│                                                                                                  │
│ © 2015 Ward Wheeler and The American Museum of Natural History                                   │
│ The program 'phyg-linux-x86' comes with ABSOLUTELY NO WARRANTY;                                  │
│ This is free software, and may be redistributed under the BSD 3-Clause License.                  │
│                                                                                                  │
│ Performs heuristic search of phylogenetic graph space via scoring abstract input data.           │
│ For more information, see: https://github.com/AMNH/PhyG#readme                                   │
└──────────────────────────────────────────────────────────────────────────────────────────────────┘[0;0m[0;97m
[0;37m
Command script file: 'search.pg'
[0;0m[0;97m[0;37mInitial random seed set to 1812351928
[0;0m[0;96m
[0;36m
Checking command file syntax
[0;0m[0;96m[0;36m	Commands appear to be properly specified--file availability and contents not checked.
[0;0m[0;97m
[0;37mReading 1,1 with option tcm
[0;0m[0;97m[0;37mReading Atopophrynus_CYTB_preprocessed_pounds.fasta with no options
[0;0m[0;97m[0;37mFile Atopophrynus_CYTB_preprocessed_pounds.fasta is nucleotide data.
[0;0m[0;97m[0;37mProcessing TCM data for file : Atopophrynus_CYTB_preprocessed_pounds.fasta
[0;0m[0;97m[0;37m	Trying to parse Atopophrynus_CYTB_preprocessed_pounds.fasta as fasta
[0;0m[0;97m[0;37mEntered 1 data file(s) and 0 input graphs
[0;0m[0;97m[0;37mRandom Seed set to 73412305
[0;0m[0;97m[0;37m
Partitioning Atopophrynus_CYTB_preprocessed_pounds.fasta#0 into 37 segments
[0;0m[0;97m[0;37mNo terminals to be renamed
[0;0m[0;97m[0;37mData were input for 65 terminals
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#0
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#1
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#2
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#3
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#4
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#5
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#6
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#7
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#8
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#9
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#10
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#11
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#12
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#13
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#14
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#15
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#16
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#17
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#18
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#19
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#20
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#21
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#22
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#23
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#24
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#25
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#26
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#27
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#28
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#29
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#30
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#31
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#32
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#33
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#34
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#35
[0;0m[0;97m[0;37mRecoding input block: Atopophrynus_CYTB_preprocessed_pounds.fasta#36
[0;0m[0;97m[0;37mAll taxa contain data
[0;0m[0;97m[0;37mCharacter Blocks as input files
[0;0m[0;97m[0;37mCharacter Blocks as input files
[0;0m[0;97m[0;37mOutgroup set to Rhinoderma_darwinii_IZUA3504
[0;0m[0;97m[0;37mRandom Seed set to 73412305
[0;0m[0;97m[0;37mRandomized search for 36060 seconds with 3 instances keeping at most 10 graphs
[0;0m[0;97m[0;37m	Generating pairwise distances for 37 character blocks
[0;0m[0;97m[0;37m	Building 1000 Wagner tree(s)
[0;0m[0;97m[0;37m	Building Distance Tree
[0;0m[0;96m
[0;36m	Distance build yielded 10 trees at cost range (4139.0,4219.0)

[0;0m[0;97m
[0;37m	Returning 10 graphs at cost range (4139.0, 4219.0)
[0;0m[0;97m[0;37mChanging multiTraverse to False:4139.0 -> 4148.0
[0;0m[0;97m[0;37mChanging multiTraverse to False:4139.0 -> 4148.0
[0;0m[0;97m[0;37mChanging multiTraverse to False:4139.0 -> 4148.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 4139.0 -> 4139.0
[0;0m[0;97m[0;37mDrifting (Swapping) 1 rounds with 20 maximum changes per round on 1 input graph(s) at minimum cost 4139.0 keeping maximum of 1 graphs
[0;0m[0;97m[0;37mTransforming data to staticApprox: 4139.0 -> 4139.0
[0;0m[0;97m[0;37mDrifting (Swapping) 1 rounds with 5 maximum changes per round on 1 input graph(s) at minimum cost 4139.0 keeping maximum of 1 graphs
[0;0m[0;97m[0;37mTransforming data to staticApprox: 4139.0 -> 4139.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 4139.0 
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs without swapping at minimum cost 4139.0
[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs without swapping at minimum cost 4136.0
[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4152.0[0;0m[0;96m
[0;36m	After fusing: 1 resulting graphs with minimum cost 4136.0  after fuse rounds (total):  2 
[0;0m[0;97m
[0;37m	-> 4129.0[0;0m[0;97m[0;37mTransforming data to dynamic: 4136.0 -> 4136.0
[0;0m[0;93m[WARN] [0;33mThread 3 is OK 10h01min -> 36060000000
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	3
Alloted  	10h01min
Ellapsed 	8m32sec
Remaining	9h52min


[0;0m[0;97m
[0;37mChanging multiTraverse to False:4136.0 -> 4148.0
[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 4136.0 -> 4136.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 4148.0 
[0;0m[0;97m[0;37m	Fusing 20 randomized graph pairs without swapping at minimum cost 4148.0
[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4146.0[0;0m[0;97m[0;37m	-> 4146.0[0;0m[0;97m[0;37m	-> 4146.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m
[0;0m[0;97m[0;37m	Fusing 20 randomized graph pairs without swapping at minimum cost 4146.0
[0;0m[0;96m
[0;36m	After fusing: 1 resulting graphs with minimum cost 4146.0  after fuse rounds (total):  2 
[0;0m[0;97m
[0;37mChanging multiTraverse to True:4146.0 -> 4136.0
[0;0m[0;97m[0;37mTransforming data to dynamic: 4146.0 -> 4146.0
[0;0m[0;93m
[WARN] [0;33mThread 3 is OK 9h52min -> 35548000000
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	3
Alloted  	9h52min
Ellapsed 	5m00sec
Remaining	9h47min


[0;0m[0;97m
[0;37m	-> 4124.0[0;0m[0;97m
[0;37mChanging multiTraverse to False:4136.0 -> 4146.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 4136.0 -> 4136.0
[0;0m[0;97m[0;37mGenetic Algorithm operating on population of 10 input graph(s) with cost range (4136.0,4212.0)
[0;0m[0;97m[0;37mGenetic algorithm generation: 0
[0;0m[0;97m[0;37m	-> 4185.0[0;0m[0;97m[0;37m	-> 4143.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4210.0[0;0m[0;97m[0;37m	-> 4200.0[0;0m[0;97m[0;37m	-> 4203.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4209.0[0;0m[0;97m[0;37m	-> 4182.0[0;0m[0;97m[0;37m	-> 4192.0[0;0m[0;97m[0;37m	-> 4203.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4172.0[0;0m[0;97m[0;37m	-> 4209.0[0;0m[0;97m[0;37m	-> 4213.0[0;0m[0;97m[0;37m	-> 4151.0[0;0m[0;97m[0;37m	-> 4223.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4122.0[0;0m[0;97m[0;37m	-> 4202.0[0;0m[0;97m[0;37m	-> 4204.0[0;0m[0;97m[0;37m	-> 4177.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4194.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4213.0[0;0m[0;97m[0;37m	-> 4169.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4202.0[0;0m[0;97m[0;37m	-> 4182.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4187.0[0;0m[0;97m[0;37m	-> 4213.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4147.0[0;0m[0;97m[0;37m	-> 4172.0[0;0m[0;97m[0;37m	-> 4222.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4220.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4184.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4197.0[0;0m[0;97m[0;37m	-> 4206.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4209.0[0;0m[0;97m[0;37m	-> 4179.0[0;0m[0;97m[0;37m	-> 4207.0[0;0m[0;97m[0;37m	-> 4121.0[0;0m[0;97m[0;37m	-> 4200.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4225.0[0;0m[0;97m[0;37m	-> 4222.0[0;0m[0;97m[0;37m	-> 4150.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4186.0[0;0m[0;97m[0;37m	-> 4206.0[0;0m[0;97m[0;37m	-> 4213.0[0;0m[0;97m[0;37m	-> 4116.0[0;0m[0;97m[0;37m	-> 4170.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4131.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4171.0[0;0m[0;97m[0;37m	-> 4222.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4185.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4181.0[0;0m[0;97m[0;37m	-> 4207.0[0;0m[0;97m[0;37m	-> 4204.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4140.0[0;0m[0;97m[0;37m	-> 4216.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4202.0[0;0m[0;97m[0;37m	-> 4210.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4142.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4127.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4108.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4185.0[0;0m[0;97m[0;37m	-> 4216.0[0;0m[0;97m[0;37m	-> 4147.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4196.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4150.0[0;0m[0;97m[0;37m	-> 4151.0[0;0m[0;97m[0;37m	-> 4216.0[0;0m[0;97m[0;37m	-> 4205.0[0;0m[0;97m[0;37m	-> 4200.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4181.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4182.0[0;0m[0;97m[0;37m	-> 4154.0[0;0m[0;97m[0;37m	-> 4209.0[0;0m[0;97m[0;37m	-> 4222.0[0;0m[0;97m[0;37m	-> 4184.0[0;0m[0;97m[0;37m	-> 4185.0[0;0m[0;97m[0;37m	-> 4169.0[0;0m[0;97m[0;37m	-> 4202.0[0;0m[0;97m[0;37m	-> 4202.0[0;0m[0;97m[0;37m	-> 4210.0[0;0m[0;97m[0;37m	-> 4206.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4177.0[0;0m[0;97m[0;37m	-> 4206.0[0;0m[0;97m[0;37m	-> 4194.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4154.0[0;0m[0;97m[0;37m	-> 4179.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4176.0[0;0m[0;97m[0;37m	-> 4227.0[0;0m[0;97m[0;37m	-> 4210.0[0;0m[0;97m[0;37m	-> 4206.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4182.0[0;0m[0;97m[0;37m	-> 4188.0[0;0m[0;97m[0;37m	-> 4169.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4214.0[0;0m[0;97m[0;37m	-> 4186.0[0;0m[0;97m[0;37m	-> 4214.0[0;0m[0;97m[0;37m	-> 4207.0[0;0m[0;97m[0;37m	-> 4186.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4283.0[0;0m[0;97m[0;37m	-> 4156.0[0;0m[0;97m[0;37m	-> 4204.0[0;0m[0;97m[0;37m	-> 4222.0[0;0m[0;97m[0;37m	-> 4151.0[0;0m[0;97m[0;37m	-> 4205.0[0;0m[0;97m[0;37m	-> 4102.0[0;0m[0;97m[0;37m	-> 4145.0[0;0m[0;97m[0;37m	-> 4205.0[0;0m[0;97m[0;37m	-> 4201.0[0;0m[0;97m[0;37m	-> 4207.0[0;0m[0;97m[0;37m	-> 4166.0[0;0m[0;97m[0;37m	-> 4181.0[0;0m[0;97m[0;37m	-> 4200.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4210.0[0;0m[0;97m[0;37m	-> 4217.0[0;0m[0;97m[0;37m	-> 4172.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4197.0[0;0m[0;97m[0;37m	-> 4190.0[0;0m[0;97m[0;37m	-> 4130.0[0;0m[0;97m[0;37m	-> 4136.0[0;0m[0;97m[0;37m	-> 4185.0[0;0m[0;97m[0;37m	-> 4190.0[0;0m[0;97m[0;37m	-> 4101.0[0;0m[0;97m[0;37m	-> 4171.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4095.0[0;0m[0;97m[0;37m	-> 4216.0[0;0m[0;97m[0;37m	-> 4191.0[0;0m[0;97m[0;37m	-> 4184.0[0;0m[0;97m[0;37m	-> 4182.0[0;0m[0;97m[0;37m	-> 4169.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4176.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4177.0[0;0m[0;97m[0;37m	-> 4140.0[0;0m[0;97m[0;37m	-> 4170.0[0;0m[0;97m[0;37m	-> 4188.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4177.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4161.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4214.0[0;0m[0;97m[0;37m	-> 4156.0[0;0m[0;97m[0;37m	-> 4142.0[0;0m[0;97m[0;37m	-> 4212.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4151.0[0;0m[0;97m[0;37m	-> 4237.0[0;0m[0;97m[0;37m	-> 4094.0[0;0m[0;97m[0;37m	-> 4208.0[0;0m[0;97m[0;37m	-> 4140.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	-> 4213.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4211.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4201.0[0;0m[0;97m[0;37m	-> 4155.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4158.0[0;0m[0;97m[0;37m	-> 4174.0[0;0m[0;97m[0;37m	-> 4143.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	-> 4093.0[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs with TBR swapping at minimum cost 4135.0
[0;0m[0;97m[0;37m	-> 4090.0[0;0m[0;97m[0;37m	-> 4089.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4157.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4088.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4130.0[0;0m[0;97m[0;37m	-> 4127.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs with TBR swapping at minimum cost 4127.0
[0;0m[0;97m[0;37m	-> 4086.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4117.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4130.0[0;0m[0;97m[0;37m	-> 4122.0[0;0m[0;97m[0;37m	-> 4126.0[0;0m[0;97m[0;37m	-> 4126.0[0;0m[0;97m[0;37m	-> 4126.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4126.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4127.0[0;0m[0;97m[0;37m	-> 4121.0[0;0m[0;97m[0;37m
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs with TBR swapping at minimum cost 4117.0
[0;0m[0;97m[0;37m	-> 4119.0[0;0m[0;97m[0;37m	-> 4116.0[0;0m[0;97m[0;37m	-> 4111.0[0;0m[0;97m[0;37m	-> 4110.0[0;0m[0;97m[0;37m	-> 4101.0[0;0m[0;97m[0;37m	Genetic Algorithm: 20 resulting graphs with cost range (4117.0,4188.0) after 1 generation(s)
[0;0m[0;97m[0;37mTransforming data to dynamic: 4117.0 -> 4117.0
[0;0m[0;93m
[WARN] [0;33mThread 3 is OK 9h47min -> 35248000000
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	3
Alloted  	9h47min
Ellapsed 	1h32min
Remaining	8h15min


[0;0m[0;97m
[0;37mChanging multiTraverse to False:4117.0 -> 4127.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 4117.0 -> 4117.0
[0;0m[0;97m[0;37mGenetic Algorithm operating on population of 10 input graph(s) with cost range (4117.0,4138.0)
[0;0m[0;97m[0;37mGenetic algorithm generation: 0
[0;0m[0;97m[0;37m	-> 4098.0[0;0m[0;97m[0;37m	-> 4198.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4122.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4213.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4129.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4142.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4121.0[0;0m[0;97m[0;37m	-> 4148.0[0;0m[0;97m[0;37m	-> 4092.0[0;0m[0;97m[0;37m	-> 4140.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4144.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4149.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4091.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4141.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4141.0[0;0m[0;97m[0;37m	-> 4150.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4140.0[0;0m[0;97m[0;37m	-> 4150.0[0;0m[0;97m[0;37m	-> 4117.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4085.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4190.0[0;0m[0;97m[0;37m	-> 4149.0[0;0m[0;97m[0;37m	-> 4124.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	-> 4146.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4134.0[0;0m[0;97m[0;37m	-> 4128.0[0;0m[0;97m[0;37m	-> 4156.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4150.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4127.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4121.0[0;0m[0;97m[0;37m	-> 4117.0[0;0m[0;97m[0;37m	-> 4143.0[0;0m[0;97m[0;37m	-> 4142.0[0;0m[0;97m[0;37m	-> 4131.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4139.0[0;0m[0;97m[0;37m	-> 4127.0[0;0m[0;97m[0;37m	-> 4145.0[0;0m[0;97m[0;37m	-> 4117.0[0;0m[0;97m[0;37m	-> 4126.0[0;0m[0;97m[0;37m	-> 4145.0[0;0m[0;97m[0;37m	-> 4131.0[0;0m[0;97m[0;37m	-> 4130.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	-> 4141.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4137.0[0;0m[0;97m[0;37m	-> 4147.0[0;0m[0;97m[0;37m	-> 4155.0[0;0m[0;97m[0;37m	-> 4123.0[0;0m[0;97m[0;37m	-> 4158.0[0;0m[0;97m[0;37m	-> 4140.0[0;0m[0;97m[0;37m	-> 4169.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4082.0[0;0m[0;97m[0;37m	-> 4144.0[0;0m[0;97m[0;37m	-> 4125.0[0;0m[0;97m[0;37m	-> 4126.0[0;0m[0;97m[0;37m	-> 4133.0[0;0m[0;97m[0;37m	-> 4132.0[0;0m[0;97m[0;37m	-> 4145.0[0;0m[0;97m[0;37m	-> 4089.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	-> 4156.0[0;0m[0;97m[0;37m	-> 4131.0[0;0m[0;97m[0;37m	-> 4180.0[0;0m[0;97m[0;37m	-> 4189.0[0;0m[0;97m[0;37m	-> 4174.0[0;0m[0;97m[0;37m	-> 4088.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	-> 4143.0[0;0m[0;97m[0;37m	-> 4141.0[0;0m[0;97m[0;37m	-> 4148.0[0;0m[0;97m[0;37m	-> 4135.0[0;0m[0;97m[0;37m	-> 4138.0[0;0m[0;97m[0;37m	Fusing 40 randomized graph pairs with TBR swapping at minimum cost 4117.0
[0;0m[0;97m[0;37m	-> 4081.0[0;0m[0;97m[0;37m	-> 4086.0[0;0m[0;97m[0;37m	-> 4085.0[0;0m[0;97m[0;37m	-> 4083.0[0;0m[0;97m[0;37m	-> 4080.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4111.0[0;0m[0;97m[0;37m	-> 4112.0[0;0m[0;97m[0;37m	-> 4109.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4116.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4080.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4112.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4111.0[0;0m[0;97m[0;37m	-> 4109.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4077.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4109.0[0;0m[0;97m[0;37m	-> 4111.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4112.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4116.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4079.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4113.0[0;0m[0;97m[0;37m	-> 4112.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4111.0[0;0m[0;97m[0;37m	-> 4109.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4114.0[0;0m[0;97m[0;37m	-> 4116.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4115.0[0;0m[0;97m[0;37m	-> 4074.0[0;0m[0;97m[0;37m
[0;0m[0;97m[0;37m	Fusing 40 randomized graph pairs with TBR swapping at minimum cost 4109.0
[0;0m[0;97m[0;37m	-> 4070.0[0;0m[0;97m[0;37m	-> 4068.0[0;0m[0;97m[0;37m	-> 4065.0[0;0m[0;97m[0;37m	-> 4076.0[0;0m[0;97m[0;37m	-> 4062.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4103.0[0;0m[0;97m[0;37m	-> 4101.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4107.0[0;0m[0;97m[0;37m	-> 4103.0[0;0m[0;97m[0;37m	-> 4107.0[0;0m[0;97m[0;37m	-> 4107.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4103.0[0;0m[0;97m[0;37m	-> 4101.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4107.0[0;0m[0;97m[0;37m	-> 4103.0[0;0m[0;97m[0;37m	-> 4107.0[0;0m[0;97m[0;37m	-> 4105.0[0;0m[0;97m[0;37m	-> 4103.0[0;0m[0;97m[0;37m
[0;0m[0;97m[0;37m	Fusing 40 randomized graph pairs with TBR swapping at minimum cost 4101.0
[0;0m[0;97m[0;37m	-> 4099.0[0;0m[0;97m[0;37m	-> 4061.0[0;0m[0;97m[0;37m	-> 4097.0[0;0m[0;97m[0;37m	-> 4100.0[0;0m[0;97m[0;37m	-> 4100.0[0;0m[0;97m[0;37m	-> 4100.0[0;0m[0;97m[0;37m	-> 4099.0[0;0m[0;97m[0;37m	-> 4097.0[0;0m[0;97m[0;37m	-> 4097.0[0;0m[0;97m[0;37m	-> 4100.0[0;0m[0;97m[0;37m	-> 4060.0[0;0m[0;97m[0;37m	-> 4059.0[0;0m[0;97m[0;37m	-> 4098.0[0;0m[0;97m[0;37m	-> 4099.0[0;0m[0;97m[0;37m	-> 4097.0[0;0m[0;97m[0;37m	-> 4100.0[0;0m[0;97m[0;37m	-> 4097.0[0;0m[0;97m[0;37m	-> 4100.0[0;0m[0;93m
[WARN] [0;33mThread 1 terminated due to time
[0;0m[0;93m
[WARN] [0;33mThread 2 terminated due to time
[0;0m[0;93m
[WARN] [0;33mThread 3 terminated due to time
[0;0m[0;97m[0;37mHit minimum cost 4117.0 in 1 of 3 iterations
[0;0m[0;97m[0;37mSelecting best graphs 
[0;0m[0;97m[0;37mSelecting unique graphs 
[0;0m[0;97m[0;37mReporting 1 graph(s) at minimum cost 4117.0
[0;0m[0;97m[0;37mReport writing to "example1.tre"
[0;0m[0;97m[0;37mReport writing to "example1.cons"
[0;0m[0;97m[0;37mTransforming data to staticApprox: 4117.0 -> 4117.0
[0;0m[0;97m[0;37m	Warning: Prealigned sequence data with non-additive type costs (all change values equal) have been recoded to non-additive characters and will not appear in implied alignment output.
[0;0m[0;97m[0;37mReport writing to "example1_ia.ss"
[0;0m[0;93m
[WARN] [0;33m
Unrecognized/missing report option in ["concatenate","overwrite"] defaulting to 'graphs'
[0;0m[0;97m[0;37mReport writing to "example1_ia.tnt"
[0;0m[0;97m[0;37mReporting 1 graph(s) at minimum cost 4117.0
[0;0m[0;97m[0;37mReport writing to "example1_ia.events"
[0;0m[0;97m[0;37mExecution returned 1 graph(s) at cost range (4117.0,4117.0) 
[0;0m[0;97m[0;37m	Wall-Clock time  36128.609119594 second(s)
	CPU time 497144.60278222203 second(s)
	CPU usage 1376%
[0;0m