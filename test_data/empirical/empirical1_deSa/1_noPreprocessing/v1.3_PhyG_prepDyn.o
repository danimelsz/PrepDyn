
Currently Loaded Modules:
  1) phyg/1.3

 

This job ran on 1 nodes.
[0;92m[0;32m

┌──────────────────────────────────────────────────────────────────────────────────────────────────┐
│ Phylogenetic Graph (PhyG) Version 1.3 [3c1a1fa] (3128 commits) on 2025-05-09 @ 11:59:29 -03      │
│                                                                                                  │
│ © 2015 Ward Wheeler and The American Museum of Natural History                                   │
│ The program 'phyg' comes with ABSOLUTELY NO WARRANTY;                                            │
│ This is free software, and may be redistributed under the BSD 3-Clause License.                  │
│                                                                                                  │
│ Performs heuristic search of phylogenetic graph space via scoring abstract input data.           │
│ For more information, see: https://github.com/AMNH/PhyG#readme                                   │
└──────────────────────────────────────────────────────────────────────────────────────────────────┘[0;0m[0;97m
[0;37m
Command script file: 'v3_script.pg'
[0;0m[0;97m[0;37mInitial random seed set to 1610721431
[0;0m[0;96m
[0;36m
Checking command file syntax
[0;0m[0;96m[0;36m	Commands appear to be properly specified--file availability and contents not checked.
[0;0m[0;97m
[0;37mReading output_COI_aligned_GB2MSA.fasta with no options
[0;0m[0;97m[0;37mFile output_COI_aligned_GB2MSA.fasta is nucleotide data.
[0;0m[0;97m[0;37m	Trying to parse output_COI_aligned_GB2MSA.fasta as fasta
[0;0m[0;97m[0;37mReading output_H1_aligned_GB2MSA.fasta with no options
[0;0m[0;97m[0;37mFile output_H1_aligned_GB2MSA.fasta is nucleotide data.
[0;0m[0;97m[0;37m	Trying to parse output_H1_aligned_GB2MSA.fasta as fasta
[0;0m[0;97m[0;37mReading output_RAG1_A_aligned_GB2MSA.fasta with no options
[0;0m[0;97m[0;37mFile output_RAG1_A_aligned_GB2MSA.fasta is nucleotide data.
[0;0m[0;97m[0;37m	Trying to parse output_RAG1_A_aligned_GB2MSA.fasta as fasta
[0;0m[0;97m[0;37mReading output_RAG1_B_aligned_GB2MSA.fasta with no options
[0;0m[0;97m[0;37mFile output_RAG1_B_aligned_GB2MSA.fasta is nucleotide data.
[0;0m[0;97m[0;37m	Trying to parse output_RAG1_B_aligned_GB2MSA.fasta as fasta
[0;0m[0;97m[0;37mReading v1_POY_Sa.nwk with no options
[0;0m[0;97m[0;37mEntered 4 data file(s) and 6 input graphs
[0;0m[0;97m[0;37mRandom Seed set to 73412305
[0;0m[0;97m[0;37mOptimality criterion set to Parsimony
[0;0m[0;97m[0;37mNo terminals to be renamed
[0;0m[0;97m[0;37mData were input for 75 terminals
[0;0m[0;97m[0;37mRecoding input block: output_RAG1_A_aligned_GB2MSA.fasta#0
[0;0m[0;97m[0;37mRecoding input block: output_H1_aligned_GB2MSA.fasta#0
[0;0m[0;97m[0;37mRecoding input block: output_COI_aligned_GB2MSA.fasta#0
[0;0m[0;97m[0;37mRecoding input block: output_RAG1_B_aligned_GB2MSA.fasta#0
[0;0m[0;97m[0;37mAll taxa contain data
[0;0m[0;97m[0;37mCharacter Blocks as input files
[0;0m[0;97m[0;37mCharacter Blocks as input files
[0;0m[0;97m[0;37mOutgroup set to Cycloramphus_boraceiensis
[0;0m[0;97m[0;37mRandom Seed set to 73412305
[0;0m[0;97m[0;37mOptimality criterion set to Parsimony
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_Sa_crossref.csv"
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_Sa.data"
[0;0m[0;97m[0;37mRandomized search for 43260 seconds with 5 instances keeping at most 10 graphs
[0;0m[0;97m[0;37m	Generating pairwise distances for 4 character blocks
[0;0m[0;97m[0;37m	Building 1000 Wagner tree(s)
[0;0m[0;97m[0;37m	Building Distance Tree
[0;0m[0;96m
[0;36m	Distance build yielded 10 trees at cost range (10245.0,10826.0)

[0;0m[0;97m
[0;37m	Returning 10 graphs at cost range (10245.0, 10826.0)
[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 10058.0 
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs without swapping at minimum cost 10058.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mDrifting (Swapping) 1 rounds with 20 maximum changes per round on 6 input graph(s) at minimum cost 10058.0 keeping maximum of 1 graphs
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mSimulated Annealing (Swapping) 1 rounds with 20 cooling steps 6 input graph(s) at minimum cost 10058.0 keeping maximum of 1 graphs
[0;0m[0;97m[0;37m	MultiTraverse to False
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 10058.0 
[0;0m[0;97m[0;37m	Fusing 5 randomized graph pairs with TBR swapping at minimum cost 10058.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 10058.0 
[0;0m[0;97m[0;37m	Fusing 5 randomized graph pairs with SPR swapping at minimum cost 10058.0
[0;0m[0;97m[0;37m	-> 10162.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10166.0[0;0m[0;97m[0;37m	-> 10060.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10162.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10075.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10119.0[0;0m[0;97m[0;37m	-> 10059.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10059.0[0;0m[0;97m[0;37m	-> 10119.0[0;0m[0;97m[0;37m	-> 10125.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10099.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10065.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10081.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10122.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10102.0[0;0m[0;97m[0;37m	-> 10081.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10075.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10081.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10089.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10100.0[0;0m[0;97m[0;37m	-> 10108.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10097.0[0;0m[0;96m
[0;36m	After fusing: 6 resulting graphs with minimum cost 10058.0  after fuse rounds (total):  1 
[0;0m[0;97m
[0;37m	-> 10066.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10060.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10099.0[0;0m[0;97m[0;37m	-> 10114.0[0;0m[0;97m[0;37m	-> 10079.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10071.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10078.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10066.0[0;0m[0;97m[0;37m	-> 10122.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10066.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10071.0[0;0m[0;97m[0;37m	-> 10066.0[0;0m[0;97m[0;37mChanging multiTraverse to True:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 10192.0[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	4
Alloted  	12h01min
Ellapsed 	1h57min
Remaining	10h03min


[0;0m[0;97m
[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 10058.0 
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs with SPR swapping at minimum cost 10058.0
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10189.0[0;0m[0;96m
[0;36m	After fusing: 6 resulting graphs with minimum cost 10058.0  after fuse rounds (total):  1 
[0;0m[0;97m
[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;96m
[0;36m	After fusing: 6 resulting graphs with minimum cost 10058.0  after fuse rounds (total):  1 
[0;0m[0;97m
[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	3
Alloted  	12h01min
Ellapsed 	4h15min
Remaining	7h45min


[0;0m[0;97m
[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	2
Alloted  	12h01min
Ellapsed 	4h16min
Remaining	7h45min


[0;0m[0;97m
[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mSwapping 6 input graph(s) with 1 trajectories at minimum cost 10058.0 keeping maximum of 1 graphs per input graph
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	Generating pairwise distances for 4 character blocks
[0;0m[0;97m[0;37m		Building 10 character Wagner replicates
[0;0m[0;97m[0;37m	Building Wagner replicate 3
[0;0m[0;97m[0;37m	Building Wagner replicate 6
[0;0m[0;97m[0;37m	Building Wagner replicate 5
[0;0m[0;97m[0;37m	Building Wagner replicate 4
[0;0m[0;97m[0;37m	Building Wagner replicate 0
[0;0m[0;97m[0;37m	Building Wagner replicate 7
[0;0m[0;97m[0;37m	Building Wagner replicate 9
[0;0m[0;97m[0;37m	Building Wagner replicate 1
[0;0m[0;97m[0;37m	Building Wagner replicate 2
[0;0m[0;97m[0;37m	Building Wagner replicate 8
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10059.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10062.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;96m
[0;36m	After fusing: 6 resulting graphs with minimum cost 10058.0  after fuse rounds (total):  1 
[0;0m[0;97m
[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	4
Alloted  	10h03min
Ellapsed 	3h42min
Remaining	6h21min


[0;0m[0;97m
[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mDrifting (Swapping) 1 rounds with 10 maximum changes per round on 6 input graph(s) at minimum cost 10058.0 keeping maximum of 4 graphs
[0;0m[0;97m[0;37m	MultiTraverse to False
[0;0m[0;97m[0;37m	-> 10063.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10105.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;96m
[0;36m	Character build yielded 10 trees at cost range (16917.0,25273.0)

[0;0m[0;97m
[0;37m	Returning 10 graphs at cost range (16917.0, 25273.0)
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10089.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	2
Alloted  	7h45min
Ellapsed 	1h36min
Remaining	6h08min


[0;0m[0;97m
[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 10137.0[0;0m[0;97m[0;37m	-> 10311.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m	Generating pairwise distances for 4 character blocks
[0;0m[0;97m[0;37m		Building 10 character Wagner replicates
[0;0m[0;97m[0;37m	Building Wagner replicate 8
[0;0m[0;97m[0;37m	Building Wagner replicate 4
[0;0m[0;97m[0;37m	Building Wagner replicate 7
[0;0m[0;97m[0;37m	Building Wagner replicate 3
[0;0m[0;97m[0;37m	Building Wagner replicate 2
[0;0m[0;97m[0;37m	Building Wagner replicate 9
[0;0m[0;97m[0;37m	Building Wagner replicate 5
[0;0m[0;97m[0;37m	Building Wagner replicate 1
[0;0m[0;97m[0;37m	Building Wagner replicate 0
[0;0m[0;97m[0;37m	Building Wagner replicate 6
[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10059.0[0;0m[0;97m[0;37m	-> 10060.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10100.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;97m[0;37m	-> 10081.0[0;0m[0;97m[0;37m	-> 10084.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10060.0[0;0m[0;97m[0;37m	-> 10089.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;96m
[0;36m	Character build yielded 10 trees at cost range (17196.0,23654.0)

[0;0m[0;97m
[0;37m	Returning 10 graphs at cost range (17196.0, 23654.0)
[0;0m[0;97m[0;37mSwapping 10 input graph(s) with 1 trajectories at minimum cost 17196.0 keeping maximum of 2 graphs per input graph
[0;0m[0;97m[0;37m	MultiTraverse to False
[0;0m[0;97m[0;37m	-> 19322.0[0;0m[0;97m[0;37m	-> 19086.0[0;0m[0;97m[0;37m	-> 18003.0[0;0m[0;97m[0;37m	-> 21815.0[0;0m[0;97m[0;37m	-> 16821.0[0;0m[0;97m[0;37m	-> 22853.0[0;0m[0;97m[0;37m	-> 20817.0[0;0m[0;97m[0;37m	-> 10086.0[0;0m[0;97m[0;37m	-> 18424.0[0;0m[0;97m[0;37m	-> 20936.0[0;0m[0;97m[0;37m	-> 19812.0[0;0m[0;97m[0;37m	-> 22052.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10061.0[0;0m[0;97m[0;37m	-> 17407.0[0;0m[0;97m[0;37m	-> 19897.0[0;0m[0;97m[0;37m	-> 18902.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 18942.0[0;0m[0;97m[0;37m	-> 17927.0[0;0m[0;97m[0;37m	-> 17919.0[0;0m[0;97m[0;37m	-> 18058.0[0;0m[0;97m[0;37m	-> 17088.0[0;0m[0;97m[0;37m	-> 16525.0[0;0m[0;97m[0;37m	-> 17116.0[0;0m[0;97m[0;37m	-> 20651.0[0;0m[0;97m[0;37m	-> 17152.0[0;0m[0;97m[0;37m	-> 15867.0[0;0m[0;97m[0;37m	-> 17433.0[0;0m[0;97m[0;37m	-> 18103.0[0;0m[0;97m[0;37m	-> 16425.0[0;0m[0;97m[0;37m	-> 16256.0[0;0m[0;97m[0;37m	-> 15617.0[0;0m[0;97m[0;37m	-> 16243.0[0;0m[0;97m[0;37m	-> 20994.0[0;0m[0;97m[0;37m	-> 17167.0[0;0m[0;97m[0;37m	-> 15949.0[0;0m[0;97m[0;37m	-> 15430.0[0;0m[0;97m[0;37m	-> 15247.0[0;0m[0;97m[0;37m	-> 16142.0[0;0m[0;97m[0;37m	-> 10125.0[0;0m[0;97m[0;37m	-> 16353.0[0;0m[0;97m[0;37m	-> 15447.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 17043.0[0;0m[0;97m[0;37m	-> 15219.0[0;0m[0;97m[0;37m	-> 17266.0[0;0m[0;97m[0;37m	-> 15139.0[0;0m[0;97m[0;37m	-> 16237.0[0;0m[0;97m[0;37m	-> 15967.0[0;0m[0;97m[0;37m	-> 15100.0[0;0m[0;97m[0;37m	-> 17032.0[0;0m[0;97m[0;37m	-> 14836.0[0;0m[0;97m[0;37m	-> 19541.0[0;0m[0;97m[0;37m	-> 14870.0[0;0m[0;97m[0;37m	-> 16067.0[0;0m[0;97m[0;37m	-> 15683.0[0;0m[0;97m[0;37m	-> 14700.0[0;0m[0;97m[0;37m	-> 15896.0[0;0m[0;97m[0;37m	-> 16654.0[0;0m[0;97m[0;37m	-> 16384.0[0;0m[0;97m[0;37m	-> 20050.0[0;0m[0;97m[0;37m	-> 10192.0[0;0m[0;97m[0;37m	-> 14449.0[0;0m[0;97m[0;37m	-> 14337.0[0;0m[0;97m[0;37m	-> 15552.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 15890.0[0;0m[0;97m[0;37m	-> 15641.0[0;0m[0;97m[0;37m	-> 19124.0[0;0m[0;97m[0;37m	-> 15518.0[0;0m[0;97m[0;37m	-> 16529.0[0;0m[0;97m[0;37m	-> 15455.0[0;0m[0;97m[0;37m	-> 14244.0[0;0m[0;97m[0;37m	-> 14369.0[0;0m[0;97m[0;37m	-> 15778.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 14233.0[0;0m[0;97m[0;37m	-> 15292.0[0;0m[0;97m[0;37m	-> 18676.0[0;0m[0;97m[0;37m	-> 16526.0[0;0m[0;97m[0;37m	-> 15385.0[0;0m[0;97m[0;37m	-> 14076.0[0;0m[0;97m[0;37m	-> 17823.0[0;0m[0;97m[0;37m	-> 18299.0[0;0m[0;97m[0;37m	-> 15318.0[0;0m[0;97m[0;37m	-> 15220.0[0;0m[0;97m[0;37m	-> 15162.0[0;0m[0;97m[0;37m	-> 14295.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 18002.0[0;0m[0;97m[0;37m	-> 13966.0[0;0m[0;97m[0;37m	-> 14947.0[0;0m[0;97m[0;37m	-> 14290.0[0;0m[0;97m[0;37m	-> 17510.0[0;0m[0;97m[0;37m	-> 14058.0[0;0m[0;97m[0;37m	-> 17727.0[0;0m[0;97m[0;37m	-> 14919.0[0;0m[0;97m[0;37m	-> 10084.0[0;0m[0;97m[0;37m	-> 15190.0[0;0m[0;97m[0;37m	-> 15354.0[0;0m[0;97m[0;37m	-> 17421.0[0;0m[0;97m[0;37m	-> 13987.0[0;0m[0;97m[0;37m	-> 16338.0[0;0m[0;97m[0;37m	-> 14982.0[0;0m[0;97m[0;37m	-> 17476.0[0;0m[0;97m[0;37m	-> 15133.0[0;0m[0;97m[0;37m	-> 17112.0[0;0m[0;97m[0;37m	-> 13766.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;97m[0;37m	-> 17417.0[0;0m[0;97m[0;37m	-> 14943.0[0;0m[0;97m[0;37m	-> 15107.0[0;0m[0;97m[0;37m	-> 17098.0[0;0m[0;97m[0;37m	-> 10130.0[0;0m[0;97m[0;37m	-> 17380.0[0;0m[0;97m[0;37m	-> 14103.0[0;0m[0;97m[0;37m	-> 14730.0[0;0m[0;97m[0;37m	-> 10119.0[0;0m[0;97m[0;37m	-> 13876.0[0;0m[0;97m[0;37m	-> 17343.0[0;0m[0;97m[0;37m	-> 14678.0[0;0m[0;97m[0;37m	-> 13621.0[0;0m[0;97m[0;37m	-> 13925.0[0;0m[0;97m[0;37m	-> 14659.0[0;0m[0;97m[0;37m	-> 14437.0[0;0m[0;97m[0;37m	-> 17126.0[0;0m[0;97m[0;37m	-> 16861.0[0;0m[0;97m[0;37m	-> 16222.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 14368.0[0;0m[0;97m[0;37m	-> 14884.0[0;0m[0;97m[0;37m	-> 13841.0[0;0m[0;97m[0;37m	-> 16566.0[0;0m[0;97m[0;37m	-> 13725.0[0;0m[0;97m[0;37m	-> 14437.0[0;0m[0;97m[0;37m	-> 16138.0[0;0m[0;97m[0;37m	-> 16837.0[0;0m[0;97m[0;37m	-> 15059.0[0;0m[0;97m[0;37m	-> 13503.0[0;0m[0;97m[0;37m	-> 13629.0[0;0m[0;97m[0;37m	-> 14757.0[0;0m[0;97m[0;37m	-> 14277.0[0;0m[0;97m[0;37m	-> 13696.0[0;0m[0;97m[0;37m	-> 13668.0[0;0m[0;97m[0;37m	-> 16591.0[0;0m[0;97m[0;37m	-> 13666.0[0;0m[0;97m[0;37m	-> 14175.0[0;0m[0;97m[0;37m	-> 13547.0[0;0m[0;97m[0;37m	-> 13473.0[0;0m[0;97m[0;37m	-> 13224.0[0;0m[0;97m[0;37m	-> 10090.0[0;0m[0;97m[0;37m	-> 14050.0[0;0m[0;97m[0;37m	-> 16049.0[0;0m[0;97m[0;37m	-> 14223.0[0;0m[0;97m[0;37m	-> 13519.0[0;0m[0;97m[0;37m	-> 14002.0[0;0m[0;97m[0;37m	-> 10086.0[0;0m[0;97m[0;37m	-> 15988.0[0;0m[0;97m[0;37m	-> 16510.0[0;0m[0;97m[0;37m	-> 13334.0[0;0m[0;97m[0;37m	-> 13139.0[0;0m[0;97m[0;37m	-> 13999.0[0;0m[0;97m[0;37m	-> 14220.0[0;0m[0;97m[0;37m	-> 15868.0[0;0m[0;97m[0;37m	-> 16261.0[0;0m[0;97m[0;37m	-> 16373.0[0;0m[0;97m[0;37m	-> 14752.0[0;0m[0;97m[0;37m	-> 13600.0[0;0m[0;97m[0;37m	-> 16267.0[0;0m[0;97m[0;37m	-> 13224.0[0;0m[0;97m[0;37m	-> 14806.0[0;0m[0;97m[0;37m	-> 16067.0[0;0m[0;97m[0;37m	-> 14624.0[0;0m[0;97m[0;37m	-> 15766.0[0;0m[0;97m[0;37m	-> 10061.0[0;0m[0;97m[0;37m	-> 15701.0[0;0m[0;97m[0;37m	-> 14750.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 14572.0[0;0m[0;97m[0;37m	-> 14556.0[0;0m[0;97m[0;37m	-> 13925.0[0;0m[0;97m[0;37m	-> 14081.0[0;0m[0;97m[0;37m	-> 13510.0[0;0m[0;97m[0;37m	-> 15961.0[0;0m[0;97m[0;37m	-> 13898.0[0;0m[0;97m[0;37m	-> 16143.0[0;0m[0;97m[0;37m	-> 10086.0[0;0m[0;97m[0;37m	-> 13948.0[0;0m[0;97m[0;37m	-> 15797.0[0;0m[0;97m[0;37m	-> 15939.0[0;0m[0;97m[0;37m	-> 13332.0[0;0m[0;97m[0;37m	-> 15617.0[0;0m[0;97m[0;37m	-> 10125.0[0;0m[0;97m[0;37m	-> 15749.0[0;0m[0;97m[0;37m	-> 14511.0[0;0m[0;97m[0;37m	-> 13299.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 13133.0[0;0m[0;97m[0;37m	-> 13773.0[0;0m[0;97m[0;37m	-> 12960.0[0;0m[0;97m[0;37m	-> 13688.0[0;0m[0;97m[0;37m	-> 13857.0[0;0m[0;97m[0;37m	-> 15649.0[0;0m[0;97m[0;37m	-> 14452.0[0;0m[0;97m[0;37m	-> 13852.0[0;0m[0;97m[0;37m	-> 15425.0[0;0m[0;97m[0;37m	-> 12957.0[0;0m[0;97m[0;37m	-> 15285.0[0;0m[0;97m[0;37m	-> 14467.0[0;0m[0;97m[0;37m	-> 15125.0[0;0m[0;97m[0;37m	-> 13223.0[0;0m[0;97m[0;37m	-> 15838.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 14958.0[0;0m[0;97m[0;37m	-> 14879.0[0;0m[0;97m[0;37m	-> 13788.0[0;0m[0;97m[0;37m	-> 12820.0[0;0m[0;97m[0;37m	-> 14291.0[0;0m[0;97m[0;37m	-> 15515.0[0;0m[0;97m[0;37m	-> 13605.0[0;0m[0;97m[0;37m	-> 14276.0[0;0m[0;97m[0;37m	-> 14191.0[0;0m[0;97m[0;37m	-> 10162.0[0;0m[0;97m[0;37m	-> 13591.0[0;0m[0;97m[0;37m	-> 14207.0[0;0m[0;97m[0;37m	-> 13217.0[0;0m[0;97m[0;37m	-> 14175.0[0;0m[0;97m[0;37m	-> 13447.0[0;0m[0;97m[0;37m	-> 13086.0[0;0m[0;97m[0;37m	-> 15455.0[0;0m[0;97m[0;37m	-> 15755.0[0;0m[0;97m[0;37m	-> 13439.0[0;0m[0;97m[0;37m	-> 15717.0[0;0m[0;97m[0;37m	-> 13437.0[0;0m[0;97m[0;37m	-> 13697.0[0;0m[0;97m[0;37m	-> 15654.0[0;0m[0;97m[0;37m	-> 13171.0[0;0m[0;97m[0;37m	-> 14843.0[0;0m[0;97m[0;37m	-> 13648.0[0;0m[0;97m[0;37m	-> 15607.0[0;0m[0;97m[0;37m	-> 14134.0[0;0m[0;97m[0;37m	-> 15419.0[0;0m[0;97m[0;37m	-> 10202.0[0;0m[0;97m[0;37m	-> 15454.0[0;0m[0;97m[0;37m	-> 14020.0[0;0m[0;97m[0;37m	-> 14784.0[0;0m[0;97m[0;37m	-> 10120.0[0;0m[0;97m[0;37m	-> 13008.0[0;0m[0;97m[0;37m	-> 12889.0[0;0m[0;97m[0;37m
	After swap: 1 resulting graphs with minimum cost 10058.0 with swap rounds (total): 6 TBR
	Warning--Swap returned as many minimum cost graphs as the 'keep' number.  
	This may have limited the effectiveness of the swap. 
	Consider increasing the 'keep' value or adding an additional swap.
[0;0m[0;97m[0;37m	-> 12741.0[0;0m[0;97m[0;37m	-> 14009.0[0;0m[0;97m[0;37m	-> 15410.0[0;0m[0;97m[0;37m	-> 13380.0[0;0m[0;97m[0;37m	-> 12645.0[0;0m[0;97m[0;37mChanging multiTraverse to True:10058.0 -> 10058.0
[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	3
Alloted  	7h45min
Ellapsed 	3h41min
Remaining	4h03min


[0;0m[0;97m
[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 15274.0[0;0m[0;97m[0;37m	-> 13989.0[0;0m[0;97m[0;37m	-> 13331.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 10058.0 
[0;0m[0;97m[0;37m	Fusing 20 randomized graph pairs without swapping at minimum cost 10058.0
[0;0m[0;97m[0;37m	-> 14783.0[0;0m[0;97m[0;37m	-> 14117.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 13162.0[0;0m[0;97m[0;37m	-> 12685.0[0;0m[0;97m[0;37m	-> 13947.0[0;0m[0;97m[0;37m	-> 13315.0[0;0m[0;97m[0;37m	-> 15327.0[0;0m[0;97m[0;37m	-> 13540.0[0;0m[0;97m[0;37m	-> 14755.0[0;0m[0;97m[0;37m	-> 10060.0[0;0m[0;97m[0;37m	-> 14719.0[0;0m[0;97m[0;37m	-> 15243.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 12600.0[0;0m[0;97m[0;37m	-> 12583.0[0;0m[0;97m[0;37m	-> 14011.0[0;0m[0;97m[0;37m	-> 12566.0[0;0m[0;97m[0;37m	-> 13150.0[0;0m[0;97m[0;37m	-> 13314.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 13500.0[0;0m[0;97m[0;37m	-> 13131.0[0;0m[0;97m[0;37m	-> 12564.0[0;0m[0;97m[0;37m	-> 13310.0[0;0m[0;97m[0;37m	-> 12521.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 15163.0[0;0m[0;97m[0;37m	-> 12536.0[0;0m[0;97m[0;37m	-> 12473.0[0;0m[0;97m[0;37m	-> 15184.0[0;0m[0;97m[0;37m	-> 12395.0[0;0m[0;97m[0;37m	-> 14002.0[0;0m[0;97m[0;37m	-> 10094.0[0;0m[0;97m[0;37m	-> 12469.0[0;0m[0;97m[0;37m	-> 13443.0[0;0m[0;97m[0;37m	-> 12377.0[0;0m[0;97m[0;37m	-> 13933.0[0;0m[0;97m[0;37m	-> 10095.0[0;0m[0;97m[0;37m	-> 15068.0[0;0m[0;97m[0;37m	-> 13339.0[0;0m[0;97m[0;37m	-> 13917.0[0;0m[0;97m[0;37m	-> 10267.0[0;0m[0;97m[0;37m	-> 13039.0[0;0m[0;97m[0;37m	-> 13915.0[0;0m[0;97m[0;37m	-> 13338.0[0;0m[0;97m[0;37m	-> 14694.0[0;0m[0;97m[0;37m	-> 10090.0[0;0m[0;97m[0;37m	-> 12429.0[0;0m[0;97m[0;37m	-> 13279.0[0;0m[0;97m[0;37m	-> 13012.0[0;0m[0;97m[0;37m	-> 13959.0[0;0m[0;97m[0;37m	-> 15122.0[0;0m[0;97m[0;37m
	After Drifting: 1 resulting graphs with minimum cost 10058.0 with swap rounds (total): 12 SPR
	Warning--Swap returned as many minimum cost graphs as the 'keep' number.  
	This may have limited the effectiveness of the swap. 
	Consider increasing the 'keep' value or adding an additional swap.
[0;0m[0;97m[0;37m	-> 12387.0[0;0m[0;97m[0;37mChanging multiTraverse to True:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 13921.0[0;0m[0;97m[0;37m	-> 12979.0[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	5
Alloted  	12h01min
Ellapsed 	8h46min
Remaining	3h14min


[0;0m[0;97m
[0;37m	-> 15088.0[0;0m[0;97m[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 13288.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mFusing 10 input graph(s) with minimum cost 10058.0 
[0;0m[0;97m[0;37m	Fusing 10 randomized graph pairs with SPR swapping at minimum cost 10058.0
[0;0m[0;97m[0;37m	-> 10118.0[0;0m[0;97m[0;37m	-> 13918.0[0;0m[0;97m[0;37m	-> 13797.0[0;0m[0;97m[0;37m	-> 12367.0[0;0m[0;97m[0;37m	-> 13870.0[0;0m[0;97m[0;37m	-> 10118.0[0;0m[0;97m[0;37m	-> 12359.0[0;0m[0;97m[0;37m	-> 15052.0[0;0m[0;97m[0;37m	-> 13775.0[0;0m[0;97m[0;37m	-> 14672.0[0;0m[0;97m[0;37m	-> 13789.0[0;0m[0;97m[0;37m	-> 12318.0[0;0m[0;97m[0;37m	-> 10081.0[0;0m[0;97m[0;37m	-> 10158.0[0;0m[0;97m[0;37m	-> 12973.0[0;0m[0;97m[0;37m	-> 13756.0[0;0m[0;97m[0;37m	-> 10064.0[0;0m[0;97m[0;37m	-> 13225.0[0;0m[0;97m[0;37m	-> 15040.0[0;0m[0;97m[0;37m	-> 15031.0[0;0m[0;97m[0;37m	-> 12311.0[0;0m[0;97m[0;37m	-> 13714.0[0;0m[0;97m[0;37m	-> 14987.0[0;0m[0;97m[0;37m	-> 13258.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 13146.0[0;0m[0;97m[0;37m	-> 14665.0[0;0m[0;97m[0;37m	-> 10058.0[0;0m[0;97m[0;37m	-> 15039.0[0;0m[0;97m[0;37m	-> 13773.0[0;0m[0;97m[0;37m	-> 13674.0[0;0m[0;97m[0;37m	-> 14865.0[0;0m[0;97m[0;37m	-> 15003.0[0;0m[0;97m[0;37m	-> 14848.0[0;0m[0;97m[0;37m	-> 12256.0[0;0m[0;97m[0;37m	-> 12935.0[0;0m[0;97m[0;37m	-> 13254.0[0;0m[0;97m[0;37m	-> 14652.0[0;0m[0;97m[0;37m	-> 14983.0[0;0m[0;97m[0;37m	-> 13069.0[0;0m[0;97m[0;37m	-> 12249.0[0;0m[0;97m[0;37m	-> 13650.0[0;0m[0;97m[0;37m	-> 14639.0[0;0m[0;97m[0;37m	-> 13027.0[0;0m[0;97m[0;37m	-> 13664.0[0;0m[0;97m[0;37m	-> 14834.0[0;0m[0;97m[0;37m	-> 13026.0[0;0m[0;97m[0;37m	-> 12932.0[0;0m[0;97m[0;37m	-> 12240.0[0;0m[0;97m[0;37m	-> 12246.0[0;0m[0;97m[0;37m	-> 13249.0[0;0m[0;97m[0;37m	-> 13623.0[0;0m[0;97m[0;37m	-> 12851.0[0;0m[0;96m
[0;36m	After fusing: 6 resulting graphs with minimum cost 10058.0  after fuse rounds (total):  1 
[0;0m[0;97m
[0;37m	-> 14638.0[0;0m[0;97m[0;37m	-> 12186.0[0;0m[0;97m[0;37mTransforming data to dynamic: 10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 13621.0[0;0m[0;97m[0;37m[0;0m[0;97m[0;37m[0;0m[0;96m
[0;36mThread   	3
Alloted  	4h03min
Ellapsed 	3h22min
Remaining	40m39sec


[0;0m[0;97m
[0;37mChanging multiTraverse to False:10058.0 -> 10058.0
[0;0m[0;97m[0;37m	-> 12144.0[0;0m[0;97m[0;37m	-> 14936.0[0;0m[0;97m[0;37m	-> 13162.0[0;0m[0;97m[0;37mTransforming data to staticApprox: 10058.0 -> 10058.0
[0;0m[0;97m[0;37mSwapping 6 input graph(s) with 1 trajectories at minimum cost 10058.0 keeping maximum of 1 graphs per input graph
[0;0m[0;97m[0;37m	-> 14777.0[0;0m[0;97m[0;37m	-> 13604.0[0;0m[0;97m[0;37mHit minimum cost 10058.0 in 5 of 5 iterations
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_Sa_stats.txt"
[0;0m[0;97m[0;37mReporting 10 graph(s) at minimum cost 10058.0
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_sa_searchTrees.txt"
[0;0m[0;97m[0;37mSelecting unique graphs 
[0;0m[0;97m[0;37mSelecting best graphs 
[0;0m[0;97m[0;37mReporting 6 graph(s) at minimum cost 10058.0
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_Sa_bestUnique.nwk"
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_Sa_ia.tnt"
[0;0m[0;97m[0;37mReport writing to "v3_PHYG_Sa_bestConsensus.nwk"
[0;0m[0;97m[0;37mExecution returned 6 graph(s) at cost range (10058.0,10058.0) 
[0;0m[0;97m[0;37m	Wall-Clock time  43944.590151689 second(s)
	CPU time 1160983.40073791 second(s)
	CPU usage 2641%
[0;0mThis job took 43947 seconds to run.
